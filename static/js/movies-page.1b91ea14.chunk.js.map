{"version":3,"file":"static/js/movies-page.1b91ea14.chunk.js","mappings":"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","sources":["components/LoadMore/LoadMore.styled.js","components/LoadMore/LoadMore.js","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","services/moviesApi.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","views/MoviesPage.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  padding: 8px 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 30px;\r\n  margin-top: 30px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  color: #000;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 22px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  min-width: 180px;\r\n  background-image: linear-gradient(\r\n    to right,\r\n    #08042b 15%,\r\n    #331fe4 50%,\r\n    #08042b\r\n  );\r\n  color: #fff;\r\n  text-shadow: 0 2px 1px #fff;\r\n  opacity: 0.8;\r\n  box-shadow: 0 2px 1px #331fe4, 0 5px 4px #473cad;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n    color: #fff;\r\n    box-shadow: 0 2px 1px #331fe4, 0 5px 4px #473cad, 0 11px 8px #2c2285;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from './LoadMore.styled';\r\n\r\nexport default function LoadMore({ onloadMore }) {\r\n  return (\r\n    <Button type=\"button\" onClick={onloadMore}>\r\n      Load more\r\n    </Button>\r\n  );\r\n}\r\n\r\nLoadMore.propTypes = {\r\n  onloadMore: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Item = styled.li`\r\n  height: 460px;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  border: 2px solid #fff;\r\n  box-shadow: 0 2px 1px #331fe4, 0 5px 4px #473cad, 0 11px 8px #160e5a,\r\n    0 20px 15px #988feb;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    transform: scale(1.04);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  width: 300px;\r\n  height: 400px;\r\n  margin-bottom: 10px;\r\n  object-fit: cover;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 1px #fff, 0 5px 4px #473cad, 0 11px 8px #fff;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #000;\r\n\r\n  &:hover {\r\n    color: #66d1a4;\r\n  }\r\n`;\r\n\r\nexport const Name = styled.h3`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #331fe4;\r\n  text-shadow: 0 2px 1px #fff, 0 5px 4px #08042b;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Item, StyledLink, Image, Name } from './MovieItem.styled';\r\n\r\nexport default function MovieItem({ id, title, poster_path, backdrop_path }) {\r\n  const location = useLocation();\r\n  const IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\r\n  const DEFAULT_IMG = 'https://cinemaone.net/images/movie_placeholder.png';\r\n\r\n  return (\r\n    <Item>\r\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\r\n        <Image\r\n          src={\r\n            poster_path ?? backdrop_path\r\n              ? `${IMAGE_URL}${poster_path ?? backdrop_path}`\r\n              : DEFAULT_IMG\r\n          }\r\n          alt={title}\r\n        />\r\n        <Name>\r\n          {''}\r\n          {title ? title?.toString().substring(0, 26) : ''}\r\n          {''}\r\n        </Name>\r\n      </StyledLink>\r\n    </Item>\r\n  );\r\n}\r\n\r\nMovieItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  poster_path: PropTypes.string,\r\n  backdrop_path: PropTypes.string,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 40px);\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MovieItem from '../MovieItem';\r\nimport { List } from './MovieList.styled';\r\n\r\nMovieList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      poster_path: PropTypes.string,\r\n      backdrop_path: PropTypes.string,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default function MovieList({ movies }) {\r\n  return (\r\n    <List>\r\n      {movies.map(item => (\r\n        <MovieItem\r\n          key={item.id}\r\n          id={item.id}\r\n          title={item.title}\r\n          poster_path={item.poster_path}\r\n          backdrop_path={item.backdrop_path}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import Axios from 'axios';\r\n\r\nconst API_KEY = 'd3c00761eff125b45afbcd52d8235bc7';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nexport const trendingMovieApi = async page => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}trending/movie/week?api_key=${API_KEY}&page=${page}`,\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const searchMovieApi = async (query, page) => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const movieDetailsApi = async movieId => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`,\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const movieCreditsApi = async movieId => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`,\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const movieReviewsApi = async (movieId, page) => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&page=${page}`,\r\n  );\r\n  return response.data;\r\n};\r\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  width: 100%;\n  height: 60px;\n  border: none;\n  outline: none;\n  max-width: 800px;\n  border-radius: 5px;\n  border: 1px solid #740526;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 2px 1px #331fe4, 0 5px 4px #fff, 0 11px 8px #2c2285;\n    border: 1px solid #331fe4;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  &::placeholder {\n    font: inherit;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 180px;\n  height: 100%;\n  border: 0;\n  cursor: pointer;\n  outline: none;\n  font-size: 25px;\n  line-height: 24px;\n  font-weight: 600;\n  color: #000;\n  text-shadow: 0 2px 1px #000;\n  opacity: 0.7;\n  background-image: linear-gradient(\n    to right,\n    #331fe4 15%,\n    #988feb 50%,\n    #331fe4\n  );\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    color: #fff;\n  }\n`;\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport { MdMovieFilter } from 'react-icons/md';\r\nimport { Form, Button, Input } from './Searchbar.styled';\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = event => {\r\n    setQuery(event.target.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (query.trim() === '') {\r\n      toast.error(\r\n        'Sorry, there are no movies matching your search query. Please try again.',\r\n        {\r\n          theme: 'colored',\r\n          autoClose: 3000,\r\n        },\r\n      );\r\n      return;\r\n    }\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        name=\"query\"\r\n        value={query}\r\n        onChange={handleChange}\r\n        placeholder=\"Search movies\"\r\n      />\r\n\r\n      <Button type=\"submit\">\r\n        <MdMovieFilter style={{ color: '#000', width: 35, height: 35 }} />\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { searchMovieApi } from '../services/moviesApi';\r\nimport MovieList from '../components/MovieList';\r\nimport Loader from '../components/Loader';\r\nimport LoadMore from '../components/LoadMore';\r\nimport Searchbar from '../components/Searchbar';\r\n\r\nexport default function MoviesPage() {\r\n  const [query, setQuery] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showButton, setShowButton] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const urlSearchParams = new URLSearchParams(location.search).get('searchBy');\r\n\r\n  useEffect(() => {\r\n    if (urlSearchParams !== '' && !query) {\r\n      setQuery(urlSearchParams);\r\n      return;\r\n    }\r\n\r\n    const fetchMoviesByQuery = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { results, total_pages, total_results } = await searchMovieApi(\r\n          query,\r\n          page,\r\n        );\r\n        page === 1\r\n          ? setMovies(results)\r\n          : setMovies(movies => [...movies, ...results]);\r\n        total_pages === page ? setShowButton(false) : setShowButton(true);\r\n\r\n        if (total_results === 0) {\r\n          setShowButton(false);\r\n          toast.error(\r\n            'Sorry, there are no movies matching your search query. Please try again.',\r\n            {\r\n              theme: 'colored',\r\n              autoClose: 3000,\r\n            },\r\n          );\r\n          return;\r\n        }\r\n\r\n        if (page === Math.ceil(total_results / 20)) {\r\n          toast(\"We're sorry, but you've reached the end of search results.\", {\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n\r\n        if (page === 1) {\r\n          toast.success(`Hooray! We found ${total_results} movies.`, {\r\n            theme: 'colored',\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n      } catch {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchMoviesByQuery();\r\n  }, [page, urlSearchParams, query, error]);\r\n\r\n  const handleFormSubmit = query => {\r\n    navigate({ ...location, search: `searchBy=${query}` });\r\n    setQuery(query);\r\n    setPage(1);\r\n  };\r\n  const handelLoadMore = () => {\r\n    setPage(page => page + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      {movies.length > 0 && <MovieList movies={movies} />}\r\n      {error && toast.error(error.message)}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        showButton && <LoadMore onloadMore={handelLoadMore} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Button","styled","LoadMore","onloadMore","type","onClick","Item","Image","StyledLink","Link","Name","MovieItem","id","title","poster_path","backdrop_path","location","useLocation","to","state","from","src","alt","toString","substring","List","MovieList","movies","map","item","API_KEY","BASE_URL","trendingMovieApi","page","Axios","response","data","searchMovieApi","query","movieDetailsApi","movieId","movieCreditsApi","movieReviewsApi","Form","Input","Searchbar","onSubmit","useState","setQuery","event","preventDefault","trim","toast","theme","autoClose","autoComplete","autoFocus","name","value","onChange","target","toLowerCase","placeholder","style","color","width","height","MoviesPage","setMovies","setPage","loading","setLoading","showButton","setShowButton","error","setError","navigate","useNavigate","urlSearchParams","URLSearchParams","search","get","useEffect","fetchMoviesByQuery","results","total_pages","total_results","Math","ceil","message","length","Loader"],"sourceRoot":""}